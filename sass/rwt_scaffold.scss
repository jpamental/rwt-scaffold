/* Import _base.scss variables */
@import "base";

@import "normalize";

/******** HELPERS ********/

/* apply a natural box layout model to all elements */
* { 
	-moz-box-sizing: border-box; 
	-webkit-box-sizing: border-box; 
	box-sizing: border-box; 
}

/* end update for semantics */

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
/* line 175, ../sass/h5bp_main.scss */
.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

/* line 180, ../sass/h5bp_main.scss */
.clearfix:after {
  clear: both;
}

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
/* line 189, ../sass/h5bp_main.scss */
.clearfix {
  *zoom: 1;
}

/* useful resets from HTML5 BoilerPlate */

/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 */
/* line 59, ../sass/h5bp_main.scss */
img {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */
/* line 67, ../sass/h5bp_main.scss */
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */
/* line 77, ../sass/h5bp_main.scss */
textarea {
  resize: vertical;
}


/* Type Rendering Mix */

/* set webkit antialiasing specifically for Mac OS */
.tr-coretext {
	/* Add classes here that you want to 'skinny up' when rendered on MacOS and fonts look chunky */
	/* example: */
	//h1 {
	//	@extend .skinnify;
	//}
}

/* helps with fonts that look a bit chunky on MacOS vs other platforms/OS's */
.skinnify {
	-webkit-font-smoothing: antialiased; 
	-moz-osx-font-smoothing: grayscale;
}

.unskinnify {
	-webkit-font-smoothing: auto; 
	-moz-osx-font-smoothing: auto;
}

.hyphenate {
 word-wrap: break-word;
 -webkit-hyphens: auto;

 -moz-hyphens: auto;

 -ms-hyphens: auto;

 -o-hyphens: auto;

 hyphens: auto;
}

/******* /HELPERS ********/

/* Minimal page design to provide visual structure */
.page {
	background-color: #fdfdfd;
}


/* RWT Scaffold Styles */
html {
	font-size: 100%;
}

body, caption, th, td, input, textarea, legend, fieldset {
	color: $text-color;
	font-family: $sans-serif; 
	font-size: ($body-copy-size / $text-base-size) * 1em; 
	letter-spacing: normal;
	line-height: ($body-copy-lh / $body-copy-size);
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		font-size: (($body-copy-size + 2) / $text-base-size) * 1em;
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h1 {
	color: $header-color;
	font-family: $sans-serif; 
	font-weight: bold; 
	font-size: 2em; 
	letter-spacing: normal;
	line-height: 1.2em; 
	margin: 1em 0 1em 0;
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		font-size: 2.5em;
	}
	@media (min-width: $mq-desk) {
		font-size: 3em;
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h2 {
	color: $header-color;
	font-family: $sans-serif; 
	font-weight: 500; 
	font-size: 2em; 
	letter-spacing: normal;
	line-height: 1.2em;
	margin: 1em 0 1em 0;
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h3 {
	color: $header-color;
	font-family: $sans-serif; 
	font-weight: 500;
	font-size: 1.5em;
	letter-spacing: normal;
	line-height: 1.2em;
	margin: 1em 0 1em 0;
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h4 {
	color: $header-color;
	font-family: $sans-serif; 
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h5 {
	color: $header-color;
	font-family: $sans-serif; 
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

h6 {
	color: $header-color;
	font-family: $sans-serif; 
	@media (min-width: $mq-s-tab) {
		
	}
	@media (min-width: $mq-l-tab) {
		
	}
	@media (min-width: $mq-desk) {
		
	}
	@media (min-width: $mq-l-desk) {
		
	}
	.wf-inactive & {
		@media (min-width: $mq-s-tab) {
			
		}
		@media (min-width: $mq-l-tab) {
			
		}
		@media (min-width: $mq-desk) {
			
		}
		@media (min-width: $mq-l-desk) {
			
		}
	}
}

p {
	max-width: 40em;
}

a {
	@include transition(background 0.3s ease-in-out, color 0.3s ease-in-out);
	&:link {
		@include nicelink($link-color-link, $page-background);
	}
	&:visited {
		@include nicelink($link-color-visited, $page-background);
	}
	&:hover {
		@include nicelink($link-color-hover, $page-background);
	}
	&:focus {
		@include nicelink($link-color-focus, $page-background);
	}
	&:active {
		@include nicelink($link-color-active, $page-background);
	}
}






/* Make sure this is last - helps correct for an orientation scale bug in iOS */

@media screen and (orientation:landscape) and (device-width:320px) and (device-height: 480px) {
	body {
		width: 480px;
	}
}/*/mediaquery*/

